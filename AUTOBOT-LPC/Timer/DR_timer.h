/*******************************************************************************************************************************//**
 *
 * @file		DR_timer.h
 * @brief		Modulo para el manejo de timers
 * @date		25/02/21
 * @author		Andres Yang
 *
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** MODULO
 **********************************************************************************************************************************/
#ifndef DR_TIMER_H_
#define DR_TIMER_H_

/***********************************************************************************************************************************
 *** INCLUDES
 **********************************************************************************************************************************/
#include <stdint.h>

/********************************************************************************************************
*** DATA TYPES
********************************************************************************************************/
//cambio de nombre de tipo de dato
typedef uint32_t time;

//identificadores para timers
typedef enum
{
	TIMER_0,
	TIMER_1,
	TIMER_2,
	TIMER_3
}timer_id;

//identificadores para el tipo de timer
typedef enum
{
	PERIODIC=0,
	SINGLE_SHOT,
	TIMER_TYPES_NUM_MAX,
}timer_types;

/***********************************************************************************************************************************
 *** PROTOTIPOS DE FUNCIONES
 **********************************************************************************************************************************/

/*******************************************************************************************************************************//**
 * @brief		Inicializa timer pasado por parametro
 * @param[in]	timer: timer a inicializar
 **********************************************************************************************************************************/
void timer_init(timer_id timer);

/*******************************************************************************************************************************//**
 * @brief		Arranca
 * @param[in]	timer: 					Identificador del timer.
 * @param[in]	value: 					Valor del timer, especificado en milisegundos
 * @param[in]	type: 					Periodic se autorecarga con el valor especificado
 * 					  					Single_Shot solo genera una vez, el valor debe
 * 					  					ser recargado manualmente para volver a utilizar el timer.
 * @param[in]	void (*handler)(void) 	puntero a la funcion a ser llamada cuando se vence el timer.
 **********************************************************************************************************************************/
void timer_start(timer_id timer, time value, timer_types type, void (*handler)(void));

/*******************************************************************************************************************************//**
 * @brief		Detiene los timers y reinicia sus valores
 * @param[in]	timer: Identificador del timer.
 **********************************************************************************************************************************/
void timer_stop(timer_id timer);

/*******************************************************************************************************************************//**
 * @brief		Handler de la interrupcion del timer 0
 **********************************************************************************************************************************/
void TIMER0_IRQHandler (void);

/*******************************************************************************************************************************//**
 * @brief		Handler de la interrupcion del timer 1
 **********************************************************************************************************************************/
void TIMER1_IRQHandler (void);

/*******************************************************************************************************************************//**
 * @brief		Handler de la interrupcion del timer 2
 **********************************************************************************************************************************/
void TIMER2_IRQHandler (void);

/*******************************************************************************************************************************//**
 * @brief		Handler de la interrupcion del timer 3
 **********************************************************************************************************************************/
void TIMER3_IRQHandler (void);

/***********************************************************************************************************************************
 *** FIN DEL MODULO
 **********************************************************************************************************************************/

#endif /* DR_TIMER_H_ */

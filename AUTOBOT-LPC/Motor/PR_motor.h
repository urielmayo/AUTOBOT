/*******************************************************************************************************************************//**
 *
 * @file		PR_motor.h
 * @brief		Modulo para el manejo de motores
 * @date		25/02/21
 * @author		Andres Yang
 *
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** MODULO
 **********************************************************************************************************************************/
#ifndef PR_MOTOR_H_
#define PR_MOTOR_H_s

/***********************************************************************************************************************************
 *** INCLUDES
 **********************************************************************************************************************************/
#include <stdint.h>

/***********************************************************************************************************************************
 *** DEFINES
 **********************************************************************************************************************************/
//identificadores para girar
enum{
	TURN_LEFT,
	TURN_RIGHT
};

//identificadores para sentidos
enum{
	FORWARD,
	BACKWARD,
	STOP,
};

//identificadores de modo
enum{
	CORRECTION,
	CURVE
};

/***********************************************************************************************************************************
 *** PROTOTIPOS DE FUNCIONES
 **********************************************************************************************************************************/

/*******************************************************************************************************************************//**
 * @brief		Inicializa el modulo para el manejo de motores
 **********************************************************************************************************************************/
void motor_init(void);

/*******************************************************************************************************************************//**
 * @brief		Frena los motores
 **********************************************************************************************************************************/
void motor_stop(void);

/*******************************************************************************************************************************//**
 * @brief		Setea los motores avance
 **********************************************************************************************************************************/
void motor_forward(uint8_t speed);

/*******************************************************************************************************************************//**
 * @brief		Setea los motores para retroceder
 **********************************************************************************************************************************/
void motor_backward(uint8_t speed);

/*******************************************************************************************************************************//**
 * @brief		Setea los motores para girar
 * @param[in]	speed: valor de la velocidad de los motores
 * @param[in]	direction: direccion de giro (usar defines con los indicadores de direccion)
 * @param[in]	mode: modo de giro (usar defines con los indicadores de modo)
 **********************************************************************************************************************************/
void motor_turn(uint8_t speed, uint8_t direction, uint8_t mode);

/*******************************************************************************************************************************//**
 * @brief		gira los motores con hacia un la izquierda segun la velocidad y sentido pasado por parametro
 * @param[in]	speed: valor de la velocidad de los motores
 * @param[in]	direction: direccion de giro (usar defines con los indicadores de direccion)
 **********************************************************************************************************************************/
void leftMotor_direction(uint8_t speed, uint8_t direction);

/*******************************************************************************************************************************//**
 * @brief		gira los motores con hacia un la derecha segun la velocidad y sentido pasado por parametro
 * @param[in]	speed: valor de la velocidad de los motores
 * @param[in]	direction: direccion de giro (usar defines con los indicadores de direccion)
 **********************************************************************************************************************************/
void rightMotor_direction(uint8_t speed, uint8_t direction);

/*******************************************************************************************************************************//**
 * @brief		Motores: avanza hacia arriba y derecha
 **********************************************************************************************************************************/
void motor_go_up_right(void);

/*******************************************************************************************************************************//**
 * @brief		Motores: avanza hacia arriba e izquierda
 **********************************************************************************************************************************/
void motor_go_up_left(void);

/*******************************************************************************************************************************//**
 * @brief		Motores: avanza hacia abajo y derecha
 **********************************************************************************************************************************/
void motor_go_down_right(void);

/*******************************************************************************************************************************//**
 * @brief		Motores: avanza hacia abajo e izquierda
 **********************************************************************************************************************************/
void motor_go_down_left(void);

/***********************************************************************************************************************************
 *** FIN DEL MODULO
 **********************************************************************************************************************************/

#endif /* PR_MOTOR_H_ */
